package pack;
import javax.swing.*;
import java.awt.*;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;

public class UserInterface extends JFrame {
    private JTextArea displayArea;

    public UserInterface() {
        setTitle("Vibrant App");
        setSize(600, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        JMenuBar menuBar = new JMenuBar();
        setJMenuBar(menuBar);

        JMenu fileMenu = new JMenu("File");
        menuBar.add(fileMenu);

        JMenuItem printDateTimeItem = new JMenuItem("Show Timestamp");
        JMenuItem writeToLogFileItem = new JMenuItem("Export to Log");
        JMenuItem colorShiftItem = new JMenuItem("Change background color");
        JMenuItem exitItem = new JMenuItem("Close");

        fileMenu.add(printDateTimeItem);
        fileMenu.add(writeToLogFileItem);
        fileMenu.add(colorShiftItem);
        fileMenu.addSeparator();
        fileMenu.add(exitItem);

        displayArea = new JTextArea();
        JScrollPane scrollPane = new JScrollPane(displayArea);
        add(scrollPane, BorderLayout.CENTER);

        printDateTimeItem.addActionListener(e -> showTimestamp());
        writeToLogFileItem.addActionListener(e -> exportToLog());
        colorShiftItem.addActionListener(e -> transformColors());
        exitItem.addActionListener(e -> System.exit(0));
    }

    private void showTimestamp() {
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        String timestamp = dateFormat.format(new Date());
        displayArea.append("Timestamp: " + timestamp + "\n");
    }

    private void exportToLog() {
        String content = displayArea.getText();
        try (BufferedWriter writer = new BufferedWriter(new FileWriter("logfile.txt"))) {
            writer.write(content);
            JOptionPane.showMessageDialog(this, "Content exported to logfile.txt successfully!");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error exporting to logfile.txt: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void transformColors() {
        // Generate random shade of green
        Random random = new Random();
        int green = random.nextInt(256);
        Color color = new Color(0, green, 0);
        displayArea.setBackground(color);

    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
        	UserInterface colorfulApp = new UserInterface();
            colorfulApp.setVisible(true);
        });
    }
}
